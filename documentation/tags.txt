<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>ofx::Time::Interval</name>
    <filename>classofx_1_1_time_1_1_interval.html</filename>
    <member kind="function">
      <type></type>
      <name>Interval</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>acfbd9d08b6bd30fe57d60e0ce533761c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Interval</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ac2afebe5369883d9b86e999382550b98</anchor>
      <arglist>(const Poco::Timestamp &amp;minimum, const Poco::Timestamp &amp;maximum)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Interval</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a4722712022926a32ac1a062571e566bc</anchor>
      <arglist>(const Poco::Timestamp &amp;center, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Interval</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a9a4fda77d72e379c772394bf078e2427</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ade083adab0d1b053a4862efe49eae520</anchor>
      <arglist>(const Poco::Timestamp &amp;minimum, const Poco::Timestamp &amp;maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFromCenter</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a24afa7d529c98c6374643749945aa5bf</anchor>
      <arglist>(const Poco::Timestamp &amp;center, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function">
      <type>Poco::Timestamp</type>
      <name>getStart</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ab72c6113a269dd6b7fa1bd788593e4cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Poco::Timestamp</type>
      <name>getEnd</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a10cec91562cf0d0101c6d79284294eac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Poco::Timestamp</type>
      <name>lerp</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a43e5c517d609aee9f0e2ec73e8f71bbc</anchor>
      <arglist>(float amount, bool clamp=true) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>map</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a62d9108b1f0d8a385f0f5531e27fdb41</anchor>
      <arglist>(const Poco::Timestamp &amp;time, bool clamp=true) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>normalize</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a6f7f7ad3a259c7a16cb3c22b334d53b5</anchor>
      <arglist>(const Poco::Timestamp &amp;time) const </arglist>
    </member>
    <member kind="function">
      <type>Poco::Timespan</type>
      <name>getTimespan</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ad81c54b9d349fc32ce596e169306587a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a5002d941cfd90df3649164fc0d8450c3</anchor>
      <arglist>(const Poco::Timestamp &amp;timestamp) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ac6fa39fc297e8969a5fb17cfae64c51d</anchor>
      <arglist>(const Interval &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a8626b0a4b492944c9c1fae9fe54e235d</anchor>
      <arglist>(const Interval &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ac93b007a06380b95da121282cd8f4674</anchor>
      <arglist>(const Interval &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a53708ad354ff9d34ec69b0dce6793c01</anchor>
      <arglist>(const Interval &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a129110596e9456a361c4863639736993</anchor>
      <arglist>(const Interval &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a9ba3c5abca2cee09e4c2edc9242ffc68</anchor>
      <arglist>(const Interval &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a10bff64ea8fd8f1d53c533afcddabf73</anchor>
      <arglist>(const Interval &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ab84a79b50eb41208f6697effbb8477f2</anchor>
      <arglist>(const Interval &amp;other) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>intersects</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a60f3fdc9e027295584ad2df82b065f30</anchor>
      <arglist>(const Interval &amp;interval0, const Interval &amp;interval1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>lerp</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ae46b2e2aa07df89c2951d7410b960401</anchor>
      <arglist>(const Interval &amp;interval, float amount, bool clamp=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>map</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>ad2494350dc235408cb20ef3cb22194a2</anchor>
      <arglist>(const Interval &amp;interval, const Poco::Timestamp &amp;time, bool clamp=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>normalize</name>
      <anchorfile>classofx_1_1_time_1_1_interval.html</anchorfile>
      <anchor>a5b033307b645789cbab1908a9a3d5f51</anchor>
      <arglist>(const Interval &amp;interval, const Poco::Timestamp &amp;time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ofx::Time::Period</name>
    <filename>classofx_1_1_time_1_1_period.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Field</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MICROSECOND</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27ba7b54a7ff8362348bde166de845dc91fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MILLISECOND</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27baf758d3bd484de12c3abe354df0bdb87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SECOND</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27bac7c67b2be229399f3e80ab2538c663d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUTE</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27ba057d4d15da66d35015eafd8917682265</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HOUR</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27baded7956ed8f960a59cf25acea627d760</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DAY</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27baeb29cc272f43107e2cf7f045c6b09272</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WEEK</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27ba8b24ff42b7f3e8c8b9ed3aaafd80b942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MONTH</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27ba1e29de07ffb78e739f86f20e547758ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YEAR</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a84fc0155e013312fbebb8572c16af27bae4e2a3ed4c5919d1009d2fdda07a02f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Period</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a8251b98a9a95362345b2ac3c230ece7c</anchor>
      <arglist>(Field field, int64_t amount)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Period</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>ac0e5b396c852bc231c7917b5d2dd973d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a206ccef0540c2751c4bf3a4570aba58a</anchor>
      <arglist>(Field field, int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>Poco::Timestamp::TimeVal</type>
      <name>get</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a0b8d31c1d37948a70da3826fc1fbc676</anchor>
      <arglist>(Field field) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>acbbfcc990be9650da33ce67775559cfa</anchor>
      <arglist>(Field field, int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMicroseconds</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a4ec6e93f85471dedbc00d0adbd557341</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMilliseconds</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a1cc0727fb4523cac1fd5865cec5dd2bc</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeconds</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a899f6b9d3a07e1136afb02357061d7c9</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMinutes</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a8144a55a606f017fe0a75e89412c27eb</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHours</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>af63669af33ec5fa17056b0599d14d044</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDays</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a4b99857f994bebce387a01b2e26f0ab8</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWeeks</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a8c76c760e68275724b5ef8ef62a5fb17</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMonths</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a4144779cf699fa95b34a53a623928df2</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addYears</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a963f47127205b33357d90040d3ee1bac</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>ac4c9c9710efbab6c0ced9e231e8b2fb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Period</type>
      <name>operator+</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>ae1005145b09085972a2d30b976361d70</anchor>
      <arglist>(const Period &amp;period) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Microsecond</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a8d68d1680b00c91846e905de62a87e92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Microseconds</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>ac4e1a99f46a85e93fdacdbbfb75ca975</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Millisecond</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a840f6aa09f38a8940b1a17d4f2f11bd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Milliseconds</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a78a9f8dca34a2391768c7ce9b1682de4</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Second</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a132e0758561232ecc2604815128960d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Seconds</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>aca34e0011fceb92b7ed4e28d5c5efa33</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Minute</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a829151e370617e8ee3b0f6594a6a2f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Minutes</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a2faa044c8b72b8028c7ad1a179eaac51</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Hour</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a8a6ebb8ca2eda997cf8b817c8c417e81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Hours</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>ae89eb31baf9859b1ab963de34b5a077a</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Day</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>ab4b0e838d62f87d8c01bc2cc55bb0502</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Days</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a6cb84e5954172689f77a6e6be9c0374d</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Week</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>affc8fa9c1a96b708757e0603d9cbc879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Weeks</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a40ecb9631e7b6fa50da70c3942954d16</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Month</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>aa9b36c8479d9764bd89d525a5670da3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Month</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a59f0044bdf101198cc85aba5487d8643</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Year</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>a869ea326d8c5a603a915bb474950179f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Period</type>
      <name>Years</name>
      <anchorfile>classofx_1_1_time_1_1_period.html</anchorfile>
      <anchor>aec5aec65c864f9f158aa331a4012d285</anchor>
      <arglist>(int64_t amount)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ofx::Time::Utils</name>
    <filename>classofx_1_1_time_1_1_utils.html</filename>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Poco::Timestamp &gt;</type>
      <name>getInstances</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>aa323c96158c189bc4a506169b2e2cc6c</anchor>
      <arglist>(const Poco::Timestamp &amp;start, std::size_t numInstances, const Period &amp;period)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Poco::Timestamp &gt;</type>
      <name>getInstances</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a388424127e70d527b1fe107e7ba837ea</anchor>
      <arglist>(const Poco::Timestamp &amp;start, const Poco::Timespan &amp;timespan, const Period &amp;period)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Poco::Timestamp &gt;</type>
      <name>getInstances</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ad826605cf1da25908cf92e504c1ca470</anchor>
      <arglist>(const Poco::Timestamp &amp;start, const Poco::Timestamp &amp;end, const Period &amp;period)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Poco::Timestamp &gt;</type>
      <name>getInstances</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>abc739c9ffcf86345033732918ab44ca0</anchor>
      <arglist>(const Interval &amp;Interval, const Period &amp;period)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>toUtcTimestamp</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a9e1c01fc626b4cf7f0c8f145b8ac7ff6</anchor>
      <arglist>(const Poco::LocalDateTime &amp;localDateTime)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>toUtcDateTime</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a69ea2e034f118c86ce9320f0e7ac4687</anchor>
      <arglist>(const Poco::LocalDateTime &amp;localDateTime)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>add</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ae3238e0ec62baafade554464d42d3e35</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, const Period &amp;period)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>add</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a6a9653885767e1bbce0674aebb9ff0b6</anchor>
      <arglist>(const Poco::DateTime &amp;time, const Period &amp;period)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>add</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a83b5ac246dfece22989e13993d01be44</anchor>
      <arglist>(const Poco::Timestamp &amp;time, const Period &amp;period)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addMicroseconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a20712b98816b713083e8e8cbff1ee176</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addMicroseconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ab397580a829d1584ce9ab249787d0b46</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addMicroseconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ae88795afbe5afd7d2ecb1ba70a172fba</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addMilliseconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a0de988844d417234eb6df905d09e30b4</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addMilliseconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>adca12537ccd76dd280178d8cd7d0b639</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addMilliseconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a1380f7a39de2ed98b1374545310628f3</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addSeconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ab534c8d22ad25636e5aa9ddef32d85d6</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addSeconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ac352eec32bb24df0c34f3e09eea71431</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addSeconds</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a9c2bcc4e9f8a786bda01a894b51f5d41</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addMinutes</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a1f4d2865dcd26bac9bc80637492f760a</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addMinutes</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>aaa078f7b76f17c9592757a0c3c65b224</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addMinutes</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a3c2da467015d3790c3b3865555672ba7</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addHours</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>aa60890e0d735ebd8b0e9db23a16653c4</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addHours</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a5999e4fc077e33014a3e504a253b9c76</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addHours</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ad01d372695002ef4465fb637813cc353</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addDays</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ad10ed087ca735732a16afb3e8caddb36</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addDays</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ace9521c9d1d4ae8314d7821c707160b2</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addDays</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a178d6fe45ac8eb0d43d6289e739fe7a8</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addWeeks</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a642d337b66af0a95d76fb1e07e2ba9a9</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addWeeks</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a3030c8ec3c81da6b18220c59725b22d9</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addWeeks</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>afb0d84a2b0e124e4e095ee835c079952</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addMonths</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>aafe13101317a269826e971a958d715fc</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addMonths</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ad3332b79d62cb9db83502c151903488b</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addMonths</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a48fe1607bca0e339437c90b723ac1ba8</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>addYears</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a7bb573d72cf6406e917d5d07ac0c21c9</anchor>
      <arglist>(const Poco::LocalDateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>addYears</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a546cde0203ff1acab103338350452bad</anchor>
      <arglist>(const Poco::DateTime &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>addYears</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a8fda3825eb024e085cac698d361e6a88</anchor>
      <arglist>(const Poco::Timestamp &amp;time, int64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>round</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a142fdc5004bf5e44993480949cf5e2ae</anchor>
      <arglist>(const Poco::LocalDateTime &amp;localDateTime, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>ceiling</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a7be8c358a657067c2a24e398403487a2</anchor>
      <arglist>(const Poco::LocalDateTime &amp;localDateTime, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>floor</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a8ec56a3c71d4598ec610b6a51a3d814a</anchor>
      <arglist>(const Poco::LocalDateTime &amp;localDateTime, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>round</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a948c7dca6596bd4689fd0602af7091d9</anchor>
      <arglist>(const Poco::DateTime &amp;dateTime, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>ceiling</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a1b4f279a95269b0318928e89371e3174</anchor>
      <arglist>(const Poco::DateTime &amp;dateTime, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>floor</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ac06d1221c0aec6f51b7408e3d2d4a8c6</anchor>
      <arglist>(const Poco::DateTime &amp;dateTime, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>round</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a8532e3d23e41864c09c835b83431b677</anchor>
      <arglist>(const Poco::Timestamp &amp;timestamp, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>ceiling</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>aa7997196c9fdec7964bf3b987001e324</anchor>
      <arglist>(const Poco::Timestamp &amp;timestamp, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>floor</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>ac26ac2bd0091ef78fa1c2469b37eded2</anchor>
      <arglist>(const Poco::Timestamp &amp;timestamp, const Poco::Timespan &amp;timespan)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>round</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a2c05ae4e3942a65371a478086f5bc9be</anchor>
      <arglist>(const Poco::LocalDateTime &amp;localDateTime, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>ceiling</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a5df4d53d774e68ddded8b6d78356c977</anchor>
      <arglist>(const Poco::LocalDateTime &amp;localDateTime, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::LocalDateTime</type>
      <name>floor</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a4837b10d726618b91ac9093c44d440f4</anchor>
      <arglist>(const Poco::LocalDateTime &amp;localDateTime, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>round</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a21a0315e708f9de35fcd92cef2b7b122</anchor>
      <arglist>(const Poco::DateTime &amp;dateTime, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>ceiling</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a4e9129c5cb47205e053b5faf21429458</anchor>
      <arglist>(const Poco::DateTime &amp;dateTime, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::DateTime</type>
      <name>floor</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>aae5dddf54e952acbd00063011c81dfd5</anchor>
      <arglist>(const Poco::DateTime &amp;dateTime, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>round</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>af843c6f0e8e3bf09f01905599bd005b5</anchor>
      <arglist>(const Poco::Timestamp &amp;timestamp, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>ceiling</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a77dc3b2291ca5283cea728881ebae519</anchor>
      <arglist>(const Poco::Timestamp &amp;timestamp, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Poco::Timestamp</type>
      <name>floor</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>af02c106e10beb886465504b2d9d5f59f</anchor>
      <arglist>(const Poco::Timestamp &amp;timestamp, Period::Field field)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>countLeapDaysBetweenYears</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a53ff644fb1eb87499560bff32b3496e8</anchor>
      <arglist>(int64_t startYear, int64_t endYear)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>countLeapDaysBeforeYear</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a0fe404a4d2d1dcb68c7349fcaa7f87ff</anchor>
      <arglist>(int64_t year)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>format</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a894130647919a10faa36698bc84b193c</anchor>
      <arglist>(const Poco::Timestamp &amp;timestamp, const std::string &amp;fmt=Poco::DateTimeFormat::RFC1123_FORMAT, int timeZoneDifferential=Poco::DateTimeFormatter::UTC)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>format</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a14a3b20eb6af8d774ed0ee9ce11987d8</anchor>
      <arglist>(const Poco::DateTime &amp;dateTime, const std::string &amp;fmt=Poco::DateTimeFormat::RFC1123_FORMAT, int timeZoneDifferential=Poco::DateTimeFormatter::UTC)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>format</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>aa2070bf8972f1b62a5548dc7c912cb33</anchor>
      <arglist>(const Poco::LocalDateTime &amp;dateTime, const std::string &amp;fmt=Poco::DateTimeFormat::RFC1123_FORMAT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>format</name>
      <anchorfile>classofx_1_1_time_1_1_utils.html</anchorfile>
      <anchor>a1dcca2ff4e6cc5e1de67eb0d72b4055b</anchor>
      <arglist>(const Poco::Timespan &amp;timespan, const std::string &amp;fmt=&quot;%dd %H:%M:%S.%i&quot;)</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include</name>
    <path>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include/</path>
    <filename>dir_ced71b4182afc3d63e8e987141bcc84a.html</filename>
    <dir>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include/ofx</dir>
  </compound>
  <compound kind="dir">
    <name>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs</name>
    <path>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/</path>
    <filename>dir_756734468ecf31f4b418468f607444ff.html</filename>
    <dir>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime</dir>
  </compound>
  <compound kind="dir">
    <name>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include/ofx</name>
    <path>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include/ofx/</path>
    <filename>dir_18a63236360094f5d908279e7eef12bd.html</filename>
    <dir>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include/ofx/Time</dir>
  </compound>
  <compound kind="dir">
    <name>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime</name>
    <path>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/</path>
    <filename>dir_78b75448afb4da59c24499a41c3e87c2.html</filename>
    <dir>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include</dir>
    <dir>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/src</dir>
  </compound>
  <compound kind="dir">
    <name>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/src</name>
    <path>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/src/</path>
    <filename>dir_01955f4a10af81d5a2bc5bffcc130274.html</filename>
    <file>ofxTime.h</file>
  </compound>
  <compound kind="dir">
    <name>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/src</name>
    <path>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/src/</path>
    <filename>dir_01d1805e1e68ce06612bb930b8c09387.html</filename>
    <file>Interval.cpp</file>
    <file>Period.cpp</file>
    <file>Utils.cpp</file>
  </compound>
  <compound kind="dir">
    <name>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include/ofx/Time</name>
    <path>/Users/bakercp/Programming/c-cpp/of-my/openFrameworks/addons/ofxTime/libs/ofxTime/include/ofx/Time/</path>
    <filename>dir_df059709d979fb6565f6738aa31759ef.html</filename>
    <file>Interval.h</file>
    <file>Period.h</file>
    <file>Utils.h</file>
  </compound>
</tagfile>
